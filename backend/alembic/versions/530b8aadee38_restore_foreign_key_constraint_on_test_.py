"""Restore foreign key constraint on test_results.user_id

Revision ID: 530b8aadee38
Revises: 
Create Date: 2025-06-26 15:24:45.356750

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '530b8aadee38'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('test_results', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.create_foreign_key(None, 'test_results', 'users', ['user_id'], ['user_id'])
    op.alter_column('users', 'is_individual',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_index('idx_users_is_individual', table_name='users')
    op.drop_constraint('users_club_id_fkey', 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'clubs', ['club_id'], ['club_id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('users_club_id_fkey', 'users', 'clubs', ['club_id'], ['club_id'], ondelete='SET NULL')
    op.create_index('idx_users_is_individual', 'users', ['is_individual'], unique=False)
    op.alter_column('users', 'is_individual',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_constraint(None, 'test_results', type_='foreignkey')
    op.alter_column('test_results', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###