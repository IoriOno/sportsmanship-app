#!/usr/bin/env python3
# backend/scripts/update_self_affirmation_questions.py

"""
自己肯定感正式質問データ投入スクリプト
99問スポーツマンシップメンタルテストシステム用
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy.orm import Session
from sqlalchemy import func
from app.database import engine
from app.models.question import Question

# 正式な自己肯定感質問データ（0-10の11段階評価）
SELF_AFFIRMATION_QUESTIONS = {
    # 選手向け自己肯定感質問
    'player': {
        'self_efficacy': [
            "練習で難しいことがあっても、「自分ならできる」と思って挑戦することができますか？",
            "試合中にミスをしても、自分で切り替えて次のプレーに集中できますか？", 
            "チームやコーチに頼らず、自分で練習の目標を決めて行動することができますか？",
            "大事な試合や発表のときでも、「自分の力を発揮できる」と自信を持てますか？",
            "チームメイトやコーチにアドバイスされたことを、自分なりに考えて試してみることができますか？"
        ],
        'self_determination': [
            "練習や試合中に、次に何をすればいいかを自分で考えることができますか？",
            "練習がきついときでも、自分でやる気を出して頑張ることができますか？",
            "自分で練習の目標を考えたり、途中でやり方を変えたりすることができますか？",
            "試合や練習で失敗しても、自分で何が悪かったか考えて次に活かすことができますか？",
            "コーチや仲間からアドバイスをもらったとき、それを自分なりに考えてやってみることができますか？"
        ],
        'self_acceptance': [
            "他の選手が自分より上手だと感じたときでも、自分には自分の良いところや価値があると思えますか？",
            "コーチから厳しい指摘を受けても、それを次の成長につなげようと思えますか？",
            "チームメイトやライバルと競争している中でも、自分が努力していることや成長している部分を認められていますか？",
            "試合で負けたり失敗したりしても、自分の成長したところや良かった部分を見つけられますか？",
            "結果や周りの評価に関係なく、スポーツを楽しむ気持ちを大事にできていますか？"
        ],
        'self_worth': [
            "試合や練習で、自分のプレーや行動が結果に影響を与えたと感じることがありますか？",
            "目標に向かって努力しているとき、「自分のやっていることは意味がある」と感じることがありますか？",
            "試合や練習の結果について、「自分の貢献があったからこそ、この結果になった」と思うことがありますか？",
            "コーチや仲間、家族から「ありがとう」や「よく頑張ったね」と言われたとき、それを素直に受け入れることができますか？",
            "たとえ結果が思うようにいかなかったときでも、「自分が果たした役割や努力には意味があった」と感じられますか？"
        ]
    },
    
    # コーチ向け自己肯定感質問
    'coach': {
        'self_efficacy': [
            "選手が上手くできない練習があったとき、「どう教えればいいか」を自分で考えて実行できますか？",
            "試合でチームの調子が悪いときでも、自分の声かけや作戦で流れを変えられる自信はありますか？",
            "練習メニューを作るとき、「選手が成長できる」と確信を持って計画を立てられますか？",
            "選手や保護者から質問されたとき、自分の考えをはっきり伝えることができますか？",
            "新しい練習方法や戦術を試すとき、「チームにとって良い効果がある」と自信を持って導入できますか？"
        ],
        'self_determination': [
            "練習メニューや戦略を立てる際に、他人の意見だけに頼らず、自分の判断で決めることができますか？",
            "チームや選手に課題があるとき、その原因を自分で分析し、解決策を考えることができますか？",
            "コーチングの成果が思うように出ない場合でも、自分のアプローチを振り返り、必要に応じて修正できますか？",
            "他のコーチや選手からのアドバイスや意見を取り入れ、それを自分の指導方法に活かすことができますか？",
            "コーチングにおいて新しい方法や戦術を試すことに対して、自信を持って挑戦できますか？"
        ],
        'self_acceptance': [
            "指導中に選手が思うように成長しないと感じたときでも、自分の指導方法や努力を認められますか？",
            "他のコーチと自分を比較したときでも、自分の指導スタイルや強みを大切にできていますか？",
            "選手や保護者からのネガティブなフィードバックを受けたとき、それを自己批判に結びつけるのではなく、改善の機会として捉えられますか？",
            "チームの勝敗や結果にかかわらず、自分が選手たちに与えた影響やサポートを誇りに思えますか？",
            "忙しい日々の中でも、自分自身の成長や健康を大切にする時間を確保できていますか？"
        ],
        'self_worth': [
            "選手の成長や成果に対して、自分の指導が重要な役割を果たしていると感じることがありますか？",
            "試合や練習の結果が良かったとき、それが自分の指導によるものだと感じられますか？",
            "選手や保護者から感謝や信頼の言葉をもらったとき、それを素直に受け入れることができますか？",
            "思うような成果が出ないときでも、自分の指導に価値があると感じることができますか？",
            "忙しい日々の中でも、選手やチームのために自分が果たしている役割を誇りに思うことができますか？"
        ]
    },
    
    # 母親向け自己肯定感質問
    'mother': {
        'self_efficacy': [
            "子どもが困っているとき、「自分が助けになれる」と思って行動することができますか？",
            "子どもの進路や選択肢について、家族にとって最適な判断を下せる自信はありますか？",
            "日常生活でトラブルが起きても、落ち着いて対応し、状況を改善できると感じますか？",
            "子どもの悩みや相談に対して、自分の考えを分かりやすく伝えられますか？",
            "子どもの成長や変化に合わせて、新しい方法を試して対応することができますか？"
        ],
        'self_determination': [
            "子どもの進路や生活に関する決断を、自分の価値観や考えに基づいて行うことができますか？",
            "家族の状況が変化したとき、問題を冷静に分析し、解決策を見つけて実行することができますか？",
            "自分の感情（不安や疲れなど）に気づき、それを適切にコントロールしながら行動することができますか？",
            "他の保護者や家族からの意見を参考にしつつ、自分の家庭に合った方法を選んで実行できますか？",
            "子どもに対する方針や教育方法について、新しいアイデアを試すことに対して自信を持てますか？"
        ],
        'self_acceptance': [
            "子供の成績やスポーツの結果にかかわらず、子供に対して自分が良いサポートをしていると感じられますか？",
            "他の親と自分を比較したときでも、自分なりの子育て方法や考え方を大切にできていますか？",
            "子供の失敗や問題に直面したときでも、自分を責めるのではなく、冷静に対処することができていますか？",
            "忙しい日常の中でも、自分自身の時間や趣味を楽しむ余裕を持てていますか？",
            "周囲の意見や社会的なプレッシャーに左右されず、子育てについて自信を持てていますか？"
        ],
        'self_worth': [
            "子供の成長や成功に対して、自分のサポートが役立っていると感じることがありますか？",
            "家庭や学校での出来事について、子供に適切なアドバイスやサポートを提供できていると感じますか？",
            "子供や家族から感謝や信頼の言葉をもらったとき、それを素直に受け入れることができますか？",
            "子供が困難に直面しているとき、自分の存在やサポートが子供の支えになっていると感じますか？",
            "家族のために日々行っていることに対して、自分自身でその価値を認めることができますか？"
        ]
    },
    
    # 父親向け自己肯定感質問
    'father': {
        'self_efficacy': [
            "子どもが困っているとき、「自分が解決の役に立てる」と思って行動することができますか？",
            "家庭内で重要な決断をする際に、自分の意見を自信を持って伝えられますか？",
            "日常生活で予期せぬ問題が起きたとき、冷静に対処し、家族を安心させることができますか？",
            "子どもの興味や活動を理解し、適切なサポートやアドバイスを提供する自信はありますか？",
            "家庭や仕事の両立を考えながら、優先順位をつけて行動することができますか？"
        ],
        'self_determination': [
            "子どもの進学や習い事などの選択について、他人の意見に左右されず、自分の考えをもとに判断することができますか？",
            "家族の問題が起きたとき、その原因を考え、解決するための具体的な行動を起こせますか？",
            "仕事や家庭の両立が難しいと感じたとき、優先順位をつけて調整しながら対応することができますか？",
            "他の保護者や家族からの意見を参考にしつつ、自分の家族に最適な方法を選んで実行できますか？",
            "子どもの教育や生活について、新しい考え方や方法を試すことに前向きになれますか？"
        ],
        'self_acceptance': [
            "子供に十分な時間やサポートを提供できていないと感じるときでも、自分の努力を評価することができますか？",
            "他の父親と自分を比較したときでも、自分の子育てスタイルに自信を持てていますか？",
            "仕事や家庭のプレッシャーがある中でも、冷静に子供と向き合い、適切なサポートを提供できていますか？",
            "家庭内で自分の役割や貢献を正当に評価できていますか？",
            "社会的な期待や周囲の目を気にせず、自分なりの父親としての在り方を大切にできていますか？"
        ],
        'self_worth': [
            "子供の成長や成果に対して、自分が大きく貢献していると感じることがありますか？",
            "家庭での自分の役割が重要だと感じ、家族にとって欠かせない存在だと思うことがありますか？",
            "子供や家族から感謝や信頼の言葉をもらったとき、それを素直に受け入れることができますか？",
            "忙しい中でも、子供や家族のために自分が果たしている役割に誇りを持つことができますか？",
            "家庭や仕事での困難な場面でも、自分の行動や判断が意味のあるものだと感じることができますか？"
        ]
    },
    
    # 社会人向け自己肯定感質問
    'adult': {
        'self_efficacy': [
            "職場で困難な課題に直面したとき、「自分で解決できる」と思って行動できますか？",
            "上司や同僚から期待される役割を、自信を持って果たすことができますか？",
            "新しいプロジェクトやタスクに取り組む際、「うまくやれる」と感じますか？",
            "他者からのフィードバックを受けて、自分の行動や考えを柔軟に修正できますか？",
            "時間やリソースが限られた中で、優先順位をつけて効率的に仕事を進めることができますか？"
        ],
        'self_determination': [
            "仕事における重要な選択を、自分の価値観や目標に基づいて決めることができますか？",
            "業務上の課題や問題が発生したとき、原因を分析し、自分で解決策を実行することができますか？",
            "自分の仕事のやり方や優先順位を、状況に応じて調整しながら進めることができますか？",
            "上司や同僚からのフィードバックを受けて、自分の行動や仕事の進め方を改善することができますか？",
            "新しいプロジェクトやタスクに挑戦することに対して、自信を持って取り組むことができますか？"
        ],
        'self_acceptance': [
            "仕事でミスや失敗をしたときでも、自分の努力や価値を認めることができますか？",
            "他の同僚や友人と自分を比較しても、自分なりの強みや価値を感じられますか？",
            "上司や同僚からの厳しいフィードバックを受けたとき、それを改善のチャンスとして前向きに活かすことができますか？",
            "忙しい日々の中でも、自分自身の健康や趣味を大切にする時間を確保できていますか？",
            "仕事の成果や他人の評価に左右されず、自分自身の努力を誇りに思うことができますか？"
        ],
        'self_worth': [
            "職場での自分の役割が、チームやプロジェクトの成功に大きく影響を与えていると感じることがありますか？",
            "同僚や上司からの感謝や評価を受けたとき、それを自分の貢献として素直に受け止めることができますか？",
            "仕事で困難に直面した際にも、自分の行動や判断が意味のあるものであると感じることができますか？",
            "成果が目に見えない仕事をしているときでも、自分の努力が会社やチームに役立っていると感じられますか？",
            "日々の業務を通じて、自分が職場にとって必要な存在だと感じることがありますか？"
        ]
    }
}

def update_self_affirmation_questions():
    """自己肯定感質問を正式データに更新"""
    
    session = Session(engine)
    
    try:
        # 既存の自己肯定感質問を削除
        print("🔄 既存の自己肯定感質問を削除中...")
        deleted_count = session.query(Question).filter(
            Question.category == 'self_affirmation'
        ).delete()
        print(f"   削除した質問数: {deleted_count}問")
        
        # 正式な自己肯定感質問を投入
        print("📝 正式な自己肯定感質問を投入中...")
        
        # 現在の最大質問番号を取得
        max_question_number = session.query(func.max(Question.question_number)).scalar() or 0
        question_number = max_question_number + 1
        
        added_count = 0
        
        for target, categories in SELF_AFFIRMATION_QUESTIONS.items():
            print(f"   {target}向け質問を追加中...")
            for subcategory, questions in categories.items():
                for question_text in questions:
                    question = Question(
                        question_number=question_number,
                        question_text=question_text,
                        category='self_affirmation',
                        subcategory=subcategory,
                        target=target,
                        is_reverse_score=False,  # 自己肯定感は逆転スコアなし
                        is_active=True
                    )
                    session.add(question)
                    question_number += 1
                    added_count += 1
        
        session.commit()
        print(f"✅ 自己肯定感質問投入完了: {added_count}問")
        
        # 投入結果確認
        print("\n📊 投入結果確認:")
        
        # 全体の質問数
        total_questions = session.query(Question).count()
        print(f"   総質問数: {total_questions}問")
        
        # カテゴリ別確認
        category_counts = session.query(
            Question.category, 
            func.count()
        ).group_by(Question.category).all()
        
        print("   カテゴリ別:")
        for category, count in category_counts:
            print(f"     {category}: {count}問")
        
        # 自己肯定感の詳細確認
        self_affirmation_breakdown = session.query(
            Question.target,
            Question.subcategory,
            func.count()
        ).filter(
            Question.category == 'self_affirmation'
        ).group_by(
            Question.target, Question.subcategory
        ).order_by(
            Question.target, Question.subcategory
        ).all()
        
        print("\n   自己肯定感詳細:")
        current_target = None
        for target, subcategory, count in self_affirmation_breakdown:
            if target != current_target:
                print(f"     {target}:")
                current_target = target
            print(f"       {subcategory}: {count}問")
        
        # 対象別質問数確認（各対象が43問になっているか）
        print("\n   対象別合計質問数:")
        for target in ['player', 'coach', 'mother', 'father', 'adult']:
            target_count = session.query(Question).filter(
                (Question.target == 'all') | (Question.target == target)
            ).count()
            print(f"     {target}: {target_count}問")
        
    except Exception as e:
        session.rollback()
        print(f"❌ エラーが発生しました: {e}")
        raise
    finally:
        session.close()

if __name__ == "__main__":
    print("🚀 自己肯定感正式データ投入開始...")
    update_self_affirmation_questions()
    print("🎉 自己肯定感正式データ投入作業完了！")